
QUnit.module("swlcalc");

QUnit.test("should initate swlcalc submodules", function(assert) {
    swlcalc.init();
    assert.ok(swlcalc);
    assert.ok(swlcalc.data);
    assert.ok(swlcalc.swap);
    assert.ok(swlcalc.handler);
    assert.ok(swlcalc.buttonBar);
    assert.ok(swlcalc.summary);
    assert.ok(swlcalc.export);
    assert.ok(swlcalc.import);
});

QUnit.test("should import from hash", function(assert) {
    //location.hash = "weapon=5,119,3,19,2,2,1,20,0,2,0&weapon2=4,27,2,28,3,4,4,17,0,8,0&head=1,3,1,4,2,1,3,11,3,10,15&finger=5,2,3,69,4,2,1,11,3,1,7&neck=4,5,3,35,1,0,1,1,1,0,1&wrist=1,0,1,1,3,3,4,20,1,0,1&luck=1,0,1,1,1,0,1,1,5,8,20&waist=2,13,3,1,2,3,2,1,2,1,1&occult=5,4,4,70,1,0,1,1,3,2,13&agent1=15,50&agent2=37,25&agent3=10,50&aa=38,5,57&passives=1400,880,960,388,916,2997,488,477,634,2154,494,753,520,270,1950,7.2,4.2,28.8,16.8"
    swlcalc.init();
    createShuffledBuild();

    // Summary
    assert.equal($("#stat-ilvl").html(), "562");
    assert.equal($("#stat-power-rating").html(), "5297");
    assert.equal($("#stat-weapon-power").html(), "3738");
    assert.equal($("#stat-attack-rating").html(), "4321");
    assert.equal($("#stat-heal-rating").html(), "2603");
    assert.equal($("#stat-hit-points").html(), "15021");
    assert.equal($("#stat-combat-power").html(), "604.4");
    assert.equal($("#stat-healing-power").html(), "126.8");
    assert.equal($("#stat-critical-rating").html(), "+1145");
    assert.equal($("#stat-critical-chance").html(), "15.5%");
    assert.equal($("#stat-critical-power").html(), "+1172");
    assert.equal($("#stat-critical-power-percentage").html(), "95.3%");
    assert.equal($("#stat-hit-rating").html(), "+806");
    assert.equal($("#stat-glance-reduction").html(), "15.9%");
    assert.equal($("#stat-protection").html(), "4800");
    assert.equal($("#stat-damage-mitigation").html(), "16.4%");
    assert.equal($("#stat-defense-rating").html(), "+494");
    assert.equal($("#stat-glance-chance").html(), "4.9%");
    assert.equal($("#stat-evade-rating").html(), "+753");
    assert.equal($("#stat-evade-chance").html(), "5.2%");
    assert.equal($("#stat-agent1-bonus25").html(), '');
    assert.equal($("#stat-agent1-bonus50").html(), '<span class="stat-value heal">27</span> Healing on Critical Heals');
    assert.equal($("#stat-agent2-bonus25").html(), '');
    assert.equal($("#stat-agent2-bonus50").html(), '');
    assert.equal($("#stat-agent3-bonus25").html(), '');
    assert.equal($("#stat-agent3-bonus50").html(), '<span class="stat-value dps">130</span> Damage on Critical Hits');

    // Slots :
    assert.ok($("#weapon-recap-active").is(":visible"));
    assert.equal($("#weapon-recap-ilvl").text(), "870");
    assert.ok($("#weapon-recap-equipment-empty").is(":hidden"));
    assert.ok($("#weapon-recap-equipment-title-section").is(":visible"));
    assert.equal($("#weapon-recap-equipment-title").text(), "Fuming Despoiler of Destruction Mk III");
    assert.ok($("#weapon-recap-equipment-subtitle-section").is(":visible"));
    assert.equal($("#weapon-recap-equipment-item").text(), "Fuming Despoiler");
    assert.equal($("#weapon-recap-equipment-rarity").text(), "Legendary");
    assert.equal($("#weapon-recap-equipment-quality").text(), "Mk III");
    assert.equal($("#weapon-recap-equipment-level").text(), "19");
    assert.ok($("#weapon-recap-equipment-stat-section").is(":visible"));
    assert.equal($("#weapon-recap-equipment-stat-power-value").text(), "3738");
    assert.equal($("#weapon-recap-equipment-stat-prot-value").text(), "");
    // TODO/TEST : buggy, should be ok : assert.ok($("#weapon-recap-equipment-img-section").is(":visible"));
    // TODO/TEST : buggy, should be ok : assert.equal($("#weapon-recap-equipment-img-item").attr('src'), "assets/images/icons/equipment/weapon/Fuming Despoiler.png");
    assert.equal($("#weapon-recap-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/legendary-42x42.png");
    assert.equal($("#weapon-recap-equipment-img-quality").attr('src'), "assets/images/icons/quality/3.png");
    assert.equal($("#weapon-recap-equipment-description").html(), "Your Rage consuming abilities deal an additional <span id=\"weapon-recap-equipment-bonus1\" class=\"stat-value dps\">498</span> physical damage to the target and nearby enemies.");
    assert.ok($("#weapon-recap-equipment-description-section").is(":visible"));
    assert.equal($("#weapon-recap-equipment-label-level").text(), "19");
    assert.ok($("#weapon-recap-glyph-section").is(":visible"));
    assert.ok($("#weapon-recap-glyph-empty").is(":hidden"));
    assert.equal($("#weapon-recap-glyph-title").text(), "Crude Fierce Glyph");
    assert.equal($("#weapon-recap-glyph-item").text(), "Fierce");
    assert.equal($("#weapon-recap-glyph-rarity").text(), "Superior");
    assert.equal($("#weapon-recap-glyph-quality").text(), "Crude");
    assert.equal($("#weapon-recap-glyph-level").text(), "20");
    assert.equal($("#weapon-recap-glyph-stat-rating").text(), "+185");
    assert.equal($("#weapon-recap-glyph-stat-text").text(), "Critical Rating");
    assert.ok($("#weapon-recap-signet-section").is(":visible"));
    assert.ok($("#weapon-recap-signet-empty").is(":hidden"));
    assert.equal($("#weapon-recap-signet-title").text(), "Destruction Mk III");
    assert.equal($("#weapon-recap-signet-item").text(), "Destruction");
    assert.equal($("#weapon-recap-signet-rarity").html(), undefined);
    assert.equal($("#weapon-recap-signet-level").html(), undefined);
    assert.equal($("#weapon-recap-signet-description").html(), "This weapon deals <span id=\"weapon-recap-signet-bonus1\" class=\"stat-value dps\">646</span> additional damage to enemies that are below <span class=\"stat-value const\">35%</span> health.");
    assert.equal($("#weapon-recap-affix").html(), "of Destruction");
    assert.equal($("#weapon-recap-affix-quality").html(), "Mk III");
    assert.equal($("#weapon-edit-ilvl").html(), "870");
    assert.equal($("#weapon-edit-equipment-id").val(), "119");
    assert.equal($("#weapon-edit-equipment-id option:selected").text(), "[Hammer] Fuming Despoiler");
    assert.equal($("#weapon-edit-equipment-rarity").val(), "legendary");
    assert.equal($("#weapon-edit-equipment-quality").val(), "3");
    assert.equal($("#weapon-edit-equipment-level").val(), "19");
    assert.equal($("#weapon-edit-equipment-stat-power-value").html(), "3738");
    assert.equal($("#weapon-edit-equipment-stat-prot-value").html(), undefined);
    assert.equal($("#weapon-edit-equipment-ilvl").html(), "809");
    // TODO/TEST : buggy, should be ok : assert.equal($("#weapon-edit-equipment-img-item").attr('src'), "assets/images/icons/weapon/Blood Magic Focus.png");
    assert.equal($("#weapon-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/legendary-42x42.png");
    assert.equal($("#weapon-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/3.png");
    assert.equal($("#weapon-edit-equipment-label-level").html(), "19");
    assert.equal($("#weapon-edit-equipment-description").html(), "Your Rage consuming abilities deal an additional <span id=\"weapon-edit-equipment-bonus1\" class=\"stat-value dps\">498</span> physical damage to the target and nearby enemies.");
    assert.equal($("#weapon-edit-glyph-id").val(), "critical-rating");
    assert.equal($("#weapon-edit-glyph-rarity").val(), "superior");
    assert.equal($("#weapon-edit-glyph-quality").val(), "1");
    assert.equal($("#weapon-edit-glyph-level").val(), "20");
    assert.equal($("#weapon-edit-glyph-stat-rating").html(), "+185");
    assert.equal($("#weapon-edit-glyph-stat-text").html(), "Critical Rating");
    assert.equal($("#weapon-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/critical-rating.png");
    assert.equal($("#weapon-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/superior-42x42.png");
    assert.equal($("#weapon-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#weapon-edit-glyph-label-level").html(), "20");
    assert.equal($("#weapon-edit-glyph-ilvl").html(), "61");
    assert.equal($("#weapon-edit-signet-id").val(), "2");
    assert.equal($("#weapon-edit-signet-rarity").val(), undefined);
    assert.equal($("#weapon-edit-signet-level").val(), undefined);
    assert.equal($("#weapon-edit-signet-img-rarity").attr('src'), undefined);
    assert.equal($("#weapon-edit-signet-description").html(), 'This weapon deals <span id=\"weapon-edit-signet-bonus1\" class=\"stat-value dps\">646</span> additional damage to enemies that are below <span class=\"stat-value const\">35%</span> health.');
    assert.equal($("#weapon-edit-signet-label-level").html(), undefined);
    assert.equal($("#weapon-edit-signet-ilvl").html(), undefined);


    assert.ok($("#weapon2-recap-active").is(":hidden"));
    assert.equal($("#weapon2-recap-ilvl").text(), "703");
    assert.ok($("#weapon2-recap-equipment-empty").is(":hidden"));
    assert.ok($("#weapon2-recap-equipment-title-section").is(":visible"));
    assert.equal($("#weapon2-recap-equipment-title").text(), "Flame-Wreathed Rifle of Warding Mk II");
    assert.ok($("#weapon2-recap-equipment-subtitle-section").is(":visible"));
    assert.equal($("#weapon2-recap-equipment-item").text(), "Flame-Wreathed Rifle");
    assert.equal($("#weapon2-recap-equipment-rarity").text(), "Mythic");
    assert.equal($("#weapon2-recap-equipment-quality").text(), "Mk II");
    assert.equal($("#weapon2-recap-equipment-level").text(), "28");
    assert.ok($("#weapon2-recap-equipment-stat-section").is(":visible"));
    assert.equal($("#weapon2-recap-equipment-stat-power-value").text(), "2780");
    assert.equal($("#weapon2-recap-equipment-stat-prot-value").text(), "");
    // TODO/TEST : buggy, should be ok : assert.ok($("#weapon2-recap-equipment-img-section").is(":visible"));
    // TODO/TEST : buggy, should be ok : assert.equal($("#weapon2-recap-equipment-img-item").attr('src'), "assets/images/icons/weapon/Blood Magic Focus.png");
    assert.equal($("#weapon2-recap-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/mythic-42x42.png");
    assert.equal($("#weapon2-recap-equipment-img-quality").attr('src'), "assets/images/icons/quality/2.png");
    assert.equal($("#weapon2-recap-equipment-description").text(), "Whenever you heal yourself or an ally, you have a 10% chance to apply a barrier which absorbs 100% of incoming damage and dissipates after absorbing 473 damage. If a barrier already exists, they are instead healed for 473. This effect can only occur once every 5 seconds.");
    assert.ok($("#weapon2-recap-equipment-description-section").is(":visible"));
    assert.equal($("#weapon2-recap-equipment-label-level").text(), "28");
    assert.ok($("#weapon2-recap-glyph-section").is(":visible"));
    assert.ok($("#weapon2-recap-glyph-empty").is(":hidden"));
    assert.equal($("#weapon2-recap-glyph-title").text(), "Elaborate Elusive Glyph");
    assert.equal($("#weapon2-recap-glyph-item").text(), "Elusive");
    assert.equal($("#weapon2-recap-glyph-rarity").text(), "Epic");
    assert.equal($("#weapon2-recap-glyph-quality").text(), "Elaborate");
    assert.equal($("#weapon2-recap-glyph-level").text(), "17");
    assert.equal($("#weapon2-recap-glyph-stat-rating").text(), "+439");
    assert.equal($("#weapon2-recap-glyph-stat-text").text(), "Evade Rating");
    assert.ok($("#weapon2-recap-signet-section").is(":visible"));
    assert.ok($("#weapon2-recap-signet-empty").is(":hidden"));
    assert.equal($("#weapon2-recap-signet-title").text(), "Warding Mk II");
    assert.equal($("#weapon2-recap-signet-item").text(), "Warding");
    assert.equal($("#weapon2-recap-signet-rarity").html(), undefined);
    assert.equal($("#weapon2-recap-signet-level").html(), undefined);
    assert.equal($("#weapon2-recap-signet-description").html(), "Increases Protection by <span id=\"weapon2-recap-signet-bonus-wrapper\" class=\"stat-value color-superior\"><span id=\"weapon2-recap-signet-bonus1\">1050</span></span> while wielded.");
    assert.equal($("#weapon2-recap-affix").html(), "of Warding");
    assert.equal($("#weapon2-recap-affix-quality").html(), "Mk II");
    assert.equal($("#weapon2-edit-ilvl").html(), "703");
    assert.equal($("#weapon2-edit-equipment-id").val(), "27");
    assert.equal($("#weapon2-edit-equipment-id option:selected").text(), "[Assault Rifle] Flame-Wreathed Rifle");
    assert.equal($("#weapon2-edit-equipment-rarity").val(), "mythic");
    assert.equal($("#weapon2-edit-equipment-quality").val(), "2");
    assert.equal($("#weapon2-edit-equipment-level").val(), "28");
    assert.equal($("#weapon2-edit-equipment-stat-power-value").html(), "2780");
    assert.equal($("#weapon2-edit-equipment-stat-prot-value").html(), undefined);
    assert.equal($("#weapon2-edit-equipment-ilvl").html(), "541");
    // TODO/TEST : buggy, should be ok : assert.equal($("#weapon2-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/weapon/None.png");
    assert.equal($("#weapon2-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/mythic-42x42.png");
    assert.equal($("#weapon2-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/2.png");
    assert.equal($("#weapon2-edit-equipment-label-level").html(), "28");
    assert.equal($("#weapon2-edit-equipment-description").text(), "Whenever you heal yourself or an ally, you have a 10% chance to apply a barrier which absorbs 100% of incoming damage and dissipates after absorbing 473 damage. If a barrier already exists, they are instead healed for 473. This effect can only occur once every 5 seconds.");
    assert.equal($("#weapon2-edit-glyph-id").val(), "evade-rating");
    assert.equal($("#weapon2-edit-glyph-rarity").val(), "epic");
    assert.equal($("#weapon2-edit-glyph-quality").val(), "4");
    assert.equal($("#weapon2-edit-glyph-level").val(), "17");
    assert.equal($("#weapon2-edit-glyph-stat-rating").html(), "+439");
    assert.equal($("#weapon2-edit-glyph-stat-text").html(), "Evade Rating");
    assert.equal($("#weapon2-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/evade-rating.png");
    assert.equal($("#weapon2-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/epic-42x42.png");
    assert.equal($("#weapon2-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/4.png");
    assert.equal($("#weapon2-edit-glyph-label-level").html(), "17");
    assert.equal($("#weapon2-edit-glyph-ilvl").html(), "162");
    assert.equal($("#weapon2-edit-signet-id").val(), "8");
    assert.equal($("#weapon2-edit-signet-rarity").val(), undefined);
    assert.equal($("#weapon2-edit-signet-level").val(), undefined);
    assert.equal($("#weapon2-edit-signet-img-rarity").attr('src'), undefined);
    assert.equal($("#weapon2-edit-signet-description").html(), 'Increases Protection by <span id=\"weapon2-edit-signet-bonus-wrapper\" class=\"stat-value color-superior\"><span id=\"weapon2-edit-signet-bonus1\">1050</span></span> while wielded.');
    assert.equal($("#weapon2-edit-signet-label-level").html(), undefined);
    assert.equal($("#weapon2-edit-signet-ilvl").html(), undefined);


    assert.equal($("#head-recap-ilvl").text(), "112");
    assert.ok($("#head-recap-equipment-empty").is(":hidden"));
    assert.ok($("#head-recap-equipment-title-section").is(":visible"));
    assert.equal($("#head-recap-equipment-title").text(), "Faded Blood Halo");
    assert.ok($("#head-recap-equipment-subtitle-section").is(":visible"));
    assert.equal($("#head-recap-equipment-item").text(), "Blood Halo");
    assert.equal($("#head-recap-equipment-rarity").text(), "Standard");
    assert.equal($("#head-recap-equipment-quality").text(), "Faded");
    assert.equal($("#head-recap-equipment-level").text(), "4");
    assert.ok($("#head-recap-equipment-stat-section").is(":visible"));
    assert.equal($("#head-recap-equipment-stat-power-value").text(), "72");
    assert.equal($("#head-recap-equipment-stat-hp-value").html(), "+117");
    assert.equal($("#head-recap-equipment-stat-ar-value").html(), "+27");
    assert.equal($("#head-recap-equipment-stat-hr-value").html(), "+3");
    assert.equal($("#head-recap-equipment-stat-prot-value").text(), "+37");
    // TODO/TEST : buggy, should be ok : assert.ok($("#head-recap-equipment-img-section").is(":visible"));
    // TODO/TEST : buggy, should be ok : assert.equal($("#head-recap-equipment-img-item").attr('src'), "assets/images/icons/weapon/Blood Magic Focus.png");
    assert.equal($("#head-recap-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/head/standard-42x42.png");
    assert.equal($("#head-recap-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#head-recap-equipment-description").text(), "Whenever you heal the same target 5 times, their Protection is increased by 510 for 3 seconds.");
    assert.ok($("#head-recap-equipment-description-section").is(":visible"));
    assert.equal($("#head-recap-equipment-label-level").text(), "4");
    assert.ok($("#head-recap-glyph-section").is(":visible"));
    assert.ok($("#head-recap-glyph-empty").is(":hidden"));
    assert.equal($("#head-recap-glyph-title").text(), "Intricate Accurate Glyph");
    assert.equal($("#head-recap-glyph-item").text(), "Accurate");
    assert.equal($("#head-recap-glyph-rarity").text(), "Superior");
    assert.equal($("#head-recap-glyph-quality").text(), "Intricate");
    assert.equal($("#head-recap-glyph-level").text(), "11");
    assert.equal($("#head-recap-glyph-stat-rating").text(), "+172");
    assert.equal($("#head-recap-glyph-stat-text").text(), "Hit Rating");
    assert.ok($("#head-recap-signet-section").is(":visible"));
    assert.ok($("#head-recap-signet-empty").is(":hidden"));
    assert.equal($("#head-recap-signet-title").text(), "Signet of the Paragon");
    assert.equal($("#head-recap-signet-item").text(), "Signet of the Paragon");
    assert.equal($("#head-recap-signet-rarity").html(), "Epic");
    assert.equal($("#head-recap-signet-level").html(), "15");
    assert.equal($("#head-recap-signet-description").text(), "Increases the damage and healing of all Elite Abilities by 14.9183%.");
    assert.equal($("#head-recap-affix").html(), undefined);
    assert.equal($("#head-recap-affix-quality").html(), undefined);
    assert.equal($("#head-edit-ilvl").html(), "112");
    assert.equal($("#head-edit-equipment-id").val(), "3");
    assert.equal($("#head-edit-equipment-id option:selected").text(), "Blood Halo");
    assert.equal($("#head-edit-equipment-rarity").val(), "standard");
    assert.equal($("#head-edit-equipment-quality").val(), "1");
    assert.equal($("#head-edit-equipment-level").val(), "4");
    assert.equal($("#head-edit-equipment-stat-power-value").html(), "72");
    assert.equal($("#head-edit-equipment-stat-prot-value").html(), "+37");
    assert.equal($("#head-edit-equipment-ilvl").html(), "7");
    // TODO/TEST : buggy, should be ok : assert.equal($("#head-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/head/Blood Halo.png");
    assert.equal($("#head-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/head/standard-42x42.png");
    assert.equal($("#head-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#head-edit-equipment-label-level").html(), "4");
    assert.equal($("#head-edit-equipment-description").text(), 'Whenever you heal the same target 5 times, their Protection is increased by 510 for 3 seconds.');
    assert.equal($("#head-edit-glyph-id").val(), "hit-rating");
    assert.equal($("#head-edit-glyph-rarity").val(), "superior");
    assert.equal($("#head-edit-glyph-quality").val(), "3");
    assert.equal($("#head-edit-glyph-level").val(), "11");
    assert.equal($("#head-edit-glyph-stat-rating").html(), "+172");
    assert.equal($("#head-edit-glyph-stat-text").html(), "Hit Rating");
    assert.equal($("#head-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/hit-rating.png");
    assert.equal($("#head-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/superior-42x42.png");
    assert.equal($("#head-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/3.png");
    assert.equal($("#head-edit-glyph-label-level").html(), "11");
    assert.equal($("#head-edit-glyph-ilvl").html(), "46");
    assert.equal($("#head-edit-signet-id").val(), "10");
    assert.equal($("#head-edit-signet-rarity").val(), "epic");
    assert.equal($("#head-edit-signet-level").val(), "15");
    assert.equal($("#head-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/epic-42x42.png");
    assert.equal($("#head-edit-signet-description").text(), 'Increases the damage and healing of all Elite Abilities by 14.9183%.');
    assert.equal($("#head-edit-signet-label-level").html(), "15");
    assert.equal($("#head-edit-signet-ilvl").html(), "58");


    assert.equal($("#finger-recap-ilvl").text(), "1246");
    assert.ok($("#finger-recap-equipment-empty").is(":hidden"));
    assert.ok($("#finger-recap-equipment-title-section").is(":visible"));
    assert.equal($("#finger-recap-equipment-title").text(), "Radiant Rurikid Knot");
    assert.ok($("#finger-recap-equipment-subtitle-section").is(":visible"));
    assert.equal($("#finger-recap-equipment-item").text(), "Rurikid Knot");
    assert.equal($("#finger-recap-equipment-rarity").text(), "Legendary");
    assert.equal($("#finger-recap-equipment-quality").text(), "Radiant");
    assert.equal($("#finger-recap-equipment-level").text(), "69");
    assert.ok($("#finger-recap-equipment-stat-section").is(":visible"));
    assert.equal($("#finger-recap-equipment-stat-power-value").text(), "2179");
    assert.equal($("#finger-recap-equipment-stat-hp-value").html(), "+3548");
    assert.equal($("#finger-recap-equipment-stat-ar-value").html(), "+828");
    assert.equal($("#finger-recap-equipment-stat-hr-value").html(), "+87");
    assert.equal($("#finger-recap-equipment-stat-prot-value").text(), "+1089");
    // TODO/TEST : buggy, should be ok : assert.ok($("#finger-recap-equipment-img-section").is(":visible"));
    // TODO/TEST : buggy, should be ok : assert.equal($("#finger-recap-equipment-img-item").attr('src'), "assets/images/icons/weapon/Blood Magic Focus.png");
    assert.equal($("#finger-recap-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/finger/legendary-42x42.png");
    assert.equal($("#finger-recap-equipment-img-quality").attr('src'), "assets/images/icons/quality/3.png");
    assert.equal($("#finger-recap-equipment-description").html(), "Whenever you purge a beneficial effect from an enemy's ability, your Protection is increased by <span class=\"stat-value const\">1530</span> for <span class=\"stat-value const\">4</span> seconds.");
    assert.ok($("#finger-recap-equipment-description-section").is(":visible"));
    assert.equal($("#finger-recap-equipment-label-level").text(), "69");
    assert.ok($("#finger-recap-glyph-section").is(":visible"));
    assert.ok($("#finger-recap-glyph-empty").is(":hidden"));
    assert.equal($("#finger-recap-glyph-title").text(), "Crude Fierce Glyph");
    assert.equal($("#finger-recap-glyph-item").text(), "Fierce");
    assert.equal($("#finger-recap-glyph-rarity").text(), "Mythic");
    assert.equal($("#finger-recap-glyph-quality").text(), "Crude");
    assert.equal($("#finger-recap-glyph-level").text(), "11");
    assert.equal($("#finger-recap-glyph-stat-rating").text(), "+472");
    assert.equal($("#finger-recap-glyph-stat-text").text(), "Critical Rating");
    assert.ok($("#finger-recap-signet-section").is(":visible"));
    assert.ok($("#finger-recap-signet-empty").is(":hidden"));
    assert.equal($("#finger-recap-signet-title").text(), "Signet of the Gambler");
    assert.equal($("#finger-recap-signet-item").text(), "Signet of the Gambler");
    assert.equal($("#finger-recap-signet-rarity").html(), "Epic");
    assert.equal($("#finger-recap-signet-level").html(), "7");
    assert.equal($("#finger-recap-signet-description").html(), "Increases the damage and healing of Pistols Basic Abilities by <span id=\"finger-recap-signet-bonus1\" class=\"stat-value const\">30.5211</span><span class=\"stat-value const\">%</span>.");
    assert.equal($("#finger-recap-affix").html(), undefined);
    assert.equal($("#finger-recap-affix-quality").html(), undefined);
    assert.equal($("#finger-edit-ilvl").html(), "1246");
    assert.equal($("#finger-edit-equipment-id").val(), "2");
    assert.equal($("#finger-edit-equipment-id option:selected").text(), "Rurikid Knot");
    assert.equal($("#finger-edit-equipment-rarity").val(), "legendary");
    assert.equal($("#finger-edit-equipment-quality").val(), "3");
    assert.equal($("#finger-edit-equipment-level").val(), "69");
    assert.equal($("#finger-edit-equipment-stat-power-value").html(), "2179");
    assert.equal($("#finger-edit-equipment-stat-prot-value").html(), "+1089");
    assert.equal($("#finger-edit-equipment-ilvl").html(), "1033");
    // TODO/TEST : buggy, should be ok : assert.equal($("#finger-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/finger/None.png");
    assert.equal($("#finger-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/finger/legendary-42x42.png");
    assert.equal($("#finger-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/3.png");
    assert.equal($("#finger-edit-equipment-label-level").html(), "69");
    assert.equal($("#finger-edit-equipment-description").html(), 'Whenever you purge a beneficial effect from an enemy\'s ability, your Protection is increased by <span class="stat-value const">1530</span> for <span class="stat-value const">4</span> seconds.');
    assert.equal($("#finger-edit-glyph-id").val(), "critical-rating");
    assert.equal($("#finger-edit-glyph-rarity").val(), "mythic");
    assert.equal($("#finger-edit-glyph-quality").val(), "1");
    assert.equal($("#finger-edit-glyph-level").val(), "11");
    assert.equal($("#finger-edit-glyph-stat-rating").html(), "+472");
    assert.equal($("#finger-edit-glyph-stat-text").html(), "Critical Rating");
    assert.equal($("#finger-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/critical-rating.png");
    assert.equal($("#finger-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/mythic-42x42.png");
    assert.equal($("#finger-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#finger-edit-glyph-label-level").html(), "11");
    assert.equal($("#finger-edit-glyph-ilvl").html(), "165");
    assert.equal($("#finger-edit-signet-id").val(), "1");
    assert.equal($("#finger-edit-signet-rarity").val(), "epic");
    assert.equal($("#finger-edit-signet-level").val(), "7");
    assert.equal($("#finger-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/epic-42x42.png");
    assert.equal($("#finger-edit-signet-description").html(), 'Increases the damage and healing of Pistols Basic Abilities by <span id="finger-edit-signet-bonus1" class="stat-value const">30.5211</span><span class="stat-value const">%</span>.');
    assert.equal($("#finger-edit-signet-label-level").html(), "7");
    assert.equal($("#finger-edit-signet-ilvl").html(), "48");


    assert.equal($("#neck-recap-ilvl").text(), "509");
    assert.ok($("#neck-recap-equipment-empty").is(":hidden"));
    assert.ok($("#neck-recap-equipment-title-section").is(":visible"));
    assert.equal($("#neck-recap-equipment-title").text(), "Radiant Egon Pendant");
    assert.ok($("#neck-recap-equipment-subtitle-section").is(":visible"));
    assert.equal($("#neck-recap-equipment-item").text(), "Egon Pendant");
    assert.equal($("#neck-recap-equipment-rarity").text(), "Mythic");
    assert.equal($("#neck-recap-equipment-quality").text(), "Radiant");
    assert.equal($("#neck-recap-equipment-level").text(), "35");
    assert.ok($("#neck-recap-equipment-stat-section").is(":visible"));
    assert.equal($("#neck-recap-equipment-stat-power-value").text(), "1294");
    assert.equal($("#neck-recap-equipment-stat-hp-value").html(), "+2107");
    assert.equal($("#neck-recap-equipment-stat-ar-value").html(), "+492");
    assert.equal($("#neck-recap-equipment-stat-hr-value").html(), "+52");
    assert.equal($("#neck-recap-equipment-stat-prot-value").text(), "+645");
    // TODO/TEST : buggy, should be ok : assert.ok($("#neck-recap-equipment-img-section").is(":visible"));
    // TODO/TEST : buggy, should be ok : assert.equal($("#neck-recap-equipment-img-item").attr('src'), "assets/images/icons/weapon/Blood Magic Focus.png");
    assert.equal($("#neck-recap-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/neck/mythic-42x42.png");
    assert.equal($("#neck-recap-equipment-img-quality").attr('src'), "assets/images/icons/quality/3.png");
    assert.equal($("#neck-recap-equipment-description").text(), "Whenever you hit an enemy who is below 50% of their maximum health, you apply a damage over time effect that deals 91 physical damage over 5 seconds. Your damage is increased by 4.5% for each enemy affected by this effect.");
    assert.ok($("#neck-recap-equipment-description-section").is(":visible"));
    assert.equal($("#neck-recap-equipment-label-level").text(), "35");
    assert.ok($("#neck-recap-glyph-section").is(":hidden"));
    assert.ok($("#neck-recap-glyph-empty").is(":visible"));
    assert.ok($("#neck-recap-signet-section").is(":hidden"));
    assert.ok($("#neck-recap-signet-empty").is(":visible"));
    assert.equal($("#neck-recap-affix").html(), undefined);
    assert.equal($("#neck-recap-affix-quality").html(), undefined);
    assert.equal($("#neck-edit-ilvl").html(), "509");
    assert.equal($("#neck-edit-equipment-id").val(), "5");
    assert.equal($("#neck-edit-equipment-id option:selected").text(), "Egon Pendant");
    assert.equal($("#neck-edit-equipment-rarity").val(), "mythic");
    assert.equal($("#neck-edit-equipment-quality").val(), "3");
    assert.equal($("#neck-edit-equipment-level").val(), "35");
    assert.equal($("#neck-edit-equipment-stat-power-value").html(), "1294");
    assert.equal($("#neck-edit-equipment-stat-prot-value").html(), "+645");
    assert.equal($("#neck-edit-equipment-ilvl").html(), "509");
    // TODO/TEST : buggy, should be ok : assert.equal($("#neck-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/neck/None.png");
    assert.equal($("#neck-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/neck/mythic-42x42.png");
    assert.equal($("#neck-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/3.png");
    assert.equal($("#neck-edit-equipment-label-level").html(), "35");
    assert.equal($("#neck-edit-equipment-description").text(), 'Whenever you hit an enemy who is below 50% of their maximum health, you apply a damage over time effect that deals 91 physical damage over 5 seconds. Your damage is increased by 4.5% for each enemy affected by this effect.');
    assert.equal($("#neck-edit-glyph-id").val(), "none");
    assert.equal($("#neck-edit-glyph-rarity").val(), "standard");
    assert.equal($("#neck-edit-glyph-quality").val(), "1");
    assert.equal($("#neck-edit-glyph-level").val(), "1");
    assert.equal($("#neck-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#neck-edit-glyph-stat-text").html(), "");
    assert.equal($("#neck-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#neck-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#neck-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#neck-edit-glyph-label-level").html(), "1");
    assert.equal($("#neck-edit-glyph-ilvl").html(), "0");
    assert.equal($("#neck-edit-signet-id").val(), "none");
    assert.equal($("#neck-edit-signet-rarity").val(), "standard");
    assert.equal($("#neck-edit-signet-level").val(), "1");
    assert.equal($("#neck-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#neck-edit-signet-description").html(), '');
    assert.equal($("#neck-edit-signet-label-level").html(), "1");
    assert.equal($("#neck-edit-signet-ilvl").html(), "0");


    assert.ok($("#wrist-recap-equipment-empty").is(":visible"));
    assert.ok($("#wrist-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#wrist-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#wrist-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#wrist-recap-equipment-img-section").is(":hidden"));
    assert.equal($("#wrist-recap-equipment-img-item").attr('src'), "assets/images/icons/equipment/wrist/None.png");
    assert.ok($("#wrist-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#wrist-recap-glyph-section").is(":visible"));
    assert.ok($("#wrist-recap-glyph-empty").is(":hidden"));
    assert.equal($("#wrist-recap-glyph-title").text(), "Elaborate Devastating Glyph");
    assert.equal($("#wrist-recap-glyph-item").text(), "Devastating");
    assert.equal($("#wrist-recap-glyph-rarity").text(), "Epic");
    assert.equal($("#wrist-recap-glyph-quality").text(), "Elaborate");
    assert.equal($("#wrist-recap-glyph-level").text(), "20");
    assert.equal($("#wrist-recap-glyph-stat-rating").text(), "+453");
    assert.equal($("#wrist-recap-glyph-stat-text").text(), "Critical Power");
    assert.ok($("#wrist-recap-signet-section").is(":hidden"));
    assert.ok($("#wrist-recap-signet-empty").is(":visible"));
    assert.equal($("#wrist-recap-affix").html(), undefined);
    assert.equal($("#wrist-recap-affix-quality").html(), undefined);
    assert.equal($("#wrist-edit-ilvl").html(), "140");
    assert.equal($("#wrist-edit-equipment-id").val(), "none");
    assert.equal($("#wrist-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#wrist-edit-equipment-rarity").val(), "standard");
    assert.equal($("#wrist-edit-equipment-quality").val(), "1");
    assert.equal($("#wrist-edit-equipment-level").val(), "1");
    assert.equal($("#wrist-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#wrist-edit-equipment-stat-prot-value").html(), "0");
    assert.equal($("#wrist-edit-equipment-ilvl").html(), "0");
    assert.equal($("#wrist-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/wrist/None.png");
    assert.equal($("#wrist-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/wrist/standard-42x42.png");
    assert.equal($("#wrist-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#wrist-edit-equipment-label-level").html(), "1");
    assert.equal($("#wrist-edit-equipment-description").html(), '');
    assert.equal($("#wrist-edit-glyph-id").val(), "critical-power");
    assert.equal($("#wrist-edit-glyph-rarity").val(), "epic");
    assert.equal($("#wrist-edit-glyph-quality").val(), "4");
    assert.equal($("#wrist-edit-glyph-level").val(), "20");
    assert.equal($("#wrist-edit-glyph-stat-rating").html(), "+453");
    assert.equal($("#wrist-edit-glyph-stat-text").html(), "Critical Power");
    assert.equal($("#wrist-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/critical-power.png");
    assert.equal($("#wrist-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/epic-42x42.png");
    assert.equal($("#wrist-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/4.png");
    assert.equal($("#wrist-edit-glyph-label-level").html(), "20");
    assert.equal($("#wrist-edit-glyph-ilvl").html(), "140");
    assert.equal($("#wrist-edit-signet-id").val(), "none");
    assert.equal($("#wrist-edit-signet-rarity").val(), "standard");
    assert.equal($("#wrist-edit-signet-level").val(), "1");
    assert.equal($("#wrist-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#wrist-edit-signet-description").html(), '');
    assert.equal($("#wrist-edit-signet-label-level").html(), "1");
    assert.equal($("#wrist-edit-signet-ilvl").html(), "0");


    assert.ok($("#luck-recap-equipment-empty").is(":visible"));
    assert.ok($("#luck-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#luck-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#luck-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#luck-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#luck-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#luck-recap-glyph-section").is(":hidden"));
    assert.ok($("#luck-recap-glyph-empty").is(":visible"));
    assert.ok($("#luck-recap-signet-section").is(":visible"));
    assert.ok($("#luck-recap-signet-empty").is(":hidden"));
    assert.equal($("#luck-recap-signet-title").text(), "Signet of Thorns");
    assert.equal($("#luck-recap-signet-item").text(), "Signet of Thorns");
    assert.equal($("#luck-recap-signet-rarity").html(), "Legendary");
    assert.equal($("#luck-recap-signet-level").html(), "20");
    assert.equal($("#luck-recap-signet-description").text(), "When you activate a Signature ability, gain a beneficial effect that damages attackers for 211 when they hit you for 5 seconds. This damage scales with your Maximum Health.");
    assert.equal($("#luck-recap-affix").html(), undefined);
    assert.equal($("#luck-recap-affix-quality").html(), undefined);
    assert.equal($("#luck-edit-ilvl").html(), "193");
    assert.equal($("#luck-edit-equipment-id").val(), "none");
    assert.equal($("#luck-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#luck-edit-equipment-rarity").val(), "standard");
    assert.equal($("#luck-edit-equipment-quality").val(), "1");
    assert.equal($("#luck-edit-equipment-level").val(), "1");
    assert.equal($("#luck-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#luck-edit-equipment-stat-prot-value").html(), "0");
    assert.equal($("#luck-edit-equipment-ilvl").html(), "0");
    assert.equal($("#luck-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/luck/None.png");
    assert.equal($("#luck-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/luck/standard-42x42.png");
    assert.equal($("#luck-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#luck-edit-equipment-label-level").html(), "1");
    assert.equal($("#luck-edit-equipment-description").html(), "");
    assert.equal($("#luck-edit-glyph-id").val(), "none");
    assert.equal($("#luck-edit-glyph-rarity").val(), "standard");
    assert.equal($("#luck-edit-glyph-quality").val(), "1");
    assert.equal($("#luck-edit-glyph-level").val(), "1");
    assert.equal($("#luck-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#luck-edit-glyph-stat-text").html(), "");
    assert.equal($("#luck-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#luck-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#luck-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#luck-edit-glyph-label-level").html(), "1");
    assert.equal($("#luck-edit-glyph-ilvl").html(), "0");
    assert.equal($("#luck-edit-signet-id").val(), "8");
    assert.equal($("#luck-edit-signet-rarity").val(), "legendary");
    assert.equal($("#luck-edit-signet-level").val(), "20");
    assert.equal($("#luck-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/legendary-42x42.png");
    assert.equal($("#luck-edit-signet-description").text(), 'When you activate a Signature ability, gain a beneficial effect that damages attackers for 211 when they hit you for 5 seconds. This damage scales with your Maximum Health.');
    assert.equal($("#luck-edit-signet-label-level").html(), "20");
    assert.equal($("#luck-edit-signet-ilvl").html(), "193");


    assert.equal($("#waist-recap-ilvl").text(), "91");
    assert.ok($("#waist-recap-equipment-empty").is(":hidden"));
    assert.ok($("#waist-recap-equipment-title-section").is(":visible"));
    assert.equal($("#waist-recap-equipment-title").text(), "Radiant Pentacle Wrap");
    assert.ok($("#waist-recap-equipment-subtitle-section").is(":visible"));
    assert.equal($("#waist-recap-equipment-item").text(), "Pentacle Wrap");
    assert.equal($("#waist-recap-equipment-rarity").text(), "Superior");
    assert.equal($("#waist-recap-equipment-quality").text(), "Radiant");
    assert.equal($("#waist-recap-equipment-level").text(), "1");
    assert.ok($("#waist-recap-equipment-stat-section").is(":visible"));
    assert.equal($("#waist-recap-equipment-stat-power-value").text(), "146");
    assert.equal($("#waist-recap-equipment-stat-hp-value").html(), "+238");
    assert.equal($("#waist-recap-equipment-stat-ar-value").html(), "+55");
    assert.equal($("#waist-recap-equipment-stat-hr-value").html(), "+6");
    assert.equal($("#waist-recap-equipment-stat-prot-value").text(), "+72");
    // TODO/TEST : buggy, should be ok : assert.ok($("#waist-recap-equipment-img-section").is(":visible"));
    // TODO/TEST : buggy, should be ok : assert.equal($("#waist-recap-equipment-img-item").attr('src'), "assets/images/icons/weapon/Blood Magic Focus.png");
    assert.equal($("#waist-recap-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/waist/superior-42x42.png");
    assert.equal($("#waist-recap-equipment-img-quality").attr('src'), "assets/images/icons/quality/3.png");
    assert.equal($("#waist-recap-equipment-description").text(), "Reduces the amount of self-damage dealt by Corruption and Martyrdom by 10%. In addition, once you have lost 10% of your health due to corruption or martyrdom, your next damaging Blood Magic ability will deal an additional 257 magical damage or your next healing Blood Magic ability will restore an additional 54 health.");
    assert.ok($("#waist-recap-equipment-description-section").is(":visible"));
    assert.equal($("#waist-recap-equipment-label-level").text(), "1");
    assert.ok($("#waist-recap-glyph-section").is(":visible"));
    assert.ok($("#waist-recap-glyph-empty").is(":hidden"));
    assert.equal($("#waist-recap-glyph-title").text(), "Simple Devastating Glyph");
    assert.equal($("#waist-recap-glyph-item").text(), "Devastating");
    assert.equal($("#waist-recap-glyph-rarity").text(), "Superior");
    assert.equal($("#waist-recap-glyph-quality").text(), "Simple");
    assert.equal($("#waist-recap-glyph-level").text(), "1");
    assert.equal($("#waist-recap-glyph-stat-rating").text(), "+92");
    assert.equal($("#waist-recap-glyph-stat-text").text(), "Critical Power");
    assert.ok($("#waist-recap-signet-section").is(":visible"));
    assert.ok($("#waist-recap-signet-empty").is(":hidden"));
    assert.equal($("#waist-recap-signet-title").text(), "Signet of Biological Metamorphosis");
    assert.equal($("#waist-recap-signet-item").text(), "Signet of Biological Metamorphosis");
    assert.equal($("#waist-recap-signet-rarity").html(), "Superior");
    assert.equal($("#waist-recap-signet-level").html(), "1");
    assert.equal($("#waist-recap-signet-description").text(), "Increases the healing of Gadgets by 13.72%.");
    assert.equal($("#waist-recap-affix").html(), undefined);
    assert.equal($("#waist-recap-affix-quality").html(), undefined);
    assert.equal($("#waist-edit-ilvl").html(), "91");
    assert.equal($("#waist-edit-equipment-id").val(), "13");
    assert.equal($("#waist-edit-equipment-id option:selected").text(), "Pentacle Wrap");
    assert.equal($("#waist-edit-equipment-rarity").val(), "superior");
    assert.equal($("#waist-edit-equipment-quality").val(), "3");
    assert.equal($("#waist-edit-equipment-level").val(), "1");
    assert.equal($("#waist-edit-equipment-stat-power-value").html(), "146");
    assert.equal($("#waist-edit-equipment-stat-prot-value").html(), "+72");
    assert.equal($("#waist-edit-equipment-ilvl").html(), "51");
    // TODO/TEST : buggy, should be ok : assert.equal($("#waist-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/waist/None.png");
    assert.equal($("#waist-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/waist/superior-42x42.png");
    assert.equal($("#waist-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/3.png");
    assert.equal($("#waist-edit-equipment-label-level").html(), "1");
    assert.equal($("#waist-edit-equipment-description").text(), 'Reduces the amount of self-damage dealt by Corruption and Martyrdom by 10%. In addition, once you have lost 10% of your health due to corruption or martyrdom, your next damaging Blood Magic ability will deal an additional 257 magical damage or your next healing Blood Magic ability will restore an additional 54 health.');
    assert.equal($("#waist-edit-glyph-id").val(), "critical-power");
    assert.equal($("#waist-edit-glyph-rarity").val(), "superior");
    assert.equal($("#waist-edit-glyph-quality").val(), "2");
    assert.equal($("#waist-edit-glyph-level").val(), "1");
    assert.equal($("#waist-edit-glyph-stat-rating").html(), "+92");
    assert.equal($("#waist-edit-glyph-stat-text").html(), "Critical Power");
    assert.equal($("#waist-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/critical-power.png");
    assert.equal($("#waist-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/superior-42x42.png");
    assert.equal($("#waist-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/2.png");
    assert.equal($("#waist-edit-glyph-label-level").html(), "1");
    assert.equal($("#waist-edit-glyph-ilvl").html(), "26");
    assert.equal($("#waist-edit-signet-id").val(), "1");
    assert.equal($("#waist-edit-signet-rarity").val(), "superior");
    assert.equal($("#waist-edit-signet-level").val(), "1");
    assert.equal($("#waist-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/superior-42x42.png");
    assert.equal($("#waist-edit-signet-description").text(), 'Increases the healing of Gadgets by 13.72%.');
    assert.equal($("#waist-edit-signet-label-level").html(), "1");
    assert.equal($("#waist-edit-signet-ilvl").html(), "14");


    assert.equal($("#occult-recap-ilvl").text(), "1198");
    assert.ok($("#occult-recap-equipment-empty").is(":hidden"));
    assert.ok($("#occult-recap-equipment-title-section").is(":visible"));
    assert.equal($("#occult-recap-equipment-title").text(), "Resplendent Razor Fossil");
    assert.ok($("#occult-recap-equipment-subtitle-section").is(":visible"));
    assert.equal($("#occult-recap-equipment-item").text(), "Razor Fossil");
    assert.equal($("#occult-recap-equipment-rarity").text(), "Legendary");
    assert.equal($("#occult-recap-equipment-quality").text(), "Resplendent");
    assert.equal($("#occult-recap-equipment-level").text(), "70");
    assert.ok($("#occult-recap-equipment-stat-section").is(":visible"));
    assert.equal($("#occult-recap-equipment-stat-power-value").text(), "1606");
    assert.equal($("#occult-recap-equipment-stat-hp-value").html(), "+2615");
    assert.equal($("#occult-recap-equipment-stat-ar-value").html(), "+610");
    assert.equal($("#occult-recap-equipment-stat-hr-value").html(), "+64");
    assert.equal($("#occult-recap-equipment-stat-prot-value").text(), "+803");
    // TODO/TEST : buggy, should be ok : assert.ok($("#occult-recap-equipment-img-section").is(":visible"));
    // TODO/TEST : buggy, should be ok : assert.equal($("#occult-recap-equipment-img-item").attr('src'), "assets/images/icons/weapon/Blood Magic Focus.png");
    assert.equal($("#occult-recap-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/occult/legendary-42x42.png");
    assert.equal($("#occult-recap-equipment-img-quality").attr('src'), "assets/images/icons/quality/4.png");
    assert.equal($("#occult-recap-equipment-description").text(), "Whenever you or any of your group members defeat an enemy, your damage is increased by 8% for 3 seconds. This effect can stack up to 5 times, however only 1 stack can be gained per second.");
    assert.ok($("#occult-recap-equipment-description-section").is(":visible"));
    assert.equal($("#occult-recap-equipment-label-level").text(), "70");
    assert.ok($("#occult-recap-glyph-section").is(":hidden"));
    assert.ok($("#occult-recap-glyph-empty").is(":visible"));
    assert.ok($("#occult-recap-signet-section").is(":visible"));
    assert.ok($("#occult-recap-signet-empty").is(":hidden"));
    assert.equal($("#occult-recap-signet-title").text(), "Signet of Contortion");
    assert.equal($("#occult-recap-signet-item").text(), "Signet of Contortion");
    assert.equal($("#occult-recap-signet-rarity").html(), "Epic");
    assert.equal($("#occult-recap-signet-level").html(), "13");
    assert.equal($("#occult-recap-signet-description").html(), "Active dodges break movement hindering effects, but also have their cooldown increased by <span id=\"occult-recap-signet-bonus1\" class=\"stat-value const\">76.13</span><span class=\"stat-value const\">%</span>.");
    assert.equal($("#occult-recap-affix").html(), undefined);
    assert.equal($("#occult-recap-affix-quality").html(), undefined);
    assert.equal($("#occult-edit-ilvl").html(), "1198");
    assert.equal($("#occult-edit-equipment-id").val(), "4");
    assert.equal($("#occult-edit-equipment-id option:selected").text(), "Razor Fossil");
    assert.equal($("#occult-edit-equipment-rarity").val(), "legendary");
    assert.equal($("#occult-edit-equipment-quality").val(), "4");
    assert.equal($("#occult-edit-equipment-level").val(), "70");
    assert.equal($("#occult-edit-equipment-stat-power-value").html(), "1606");
    assert.equal($("#occult-edit-equipment-stat-prot-value").html(), "+803");
    assert.equal($("#occult-edit-equipment-ilvl").html(), "1143");
    // TODO/TEST : buggy, should be ok : assert.equal($("#occult-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/occult/None.png");
    assert.equal($("#occult-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/occult/legendary-42x42.png");
    assert.equal($("#occult-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/4.png");
    assert.equal($("#occult-edit-equipment-label-level").html(), "70");
    assert.equal($("#occult-edit-equipment-description").text(), 'Whenever you or any of your group members defeat an enemy, your damage is increased by 8% for 3 seconds. This effect can stack up to 5 times, however only 1 stack can be gained per second.');
    assert.equal($("#occult-edit-glyph-id").val(), "none");
    assert.equal($("#occult-edit-glyph-rarity").val(), "standard");
    assert.equal($("#occult-edit-glyph-quality").val(), "1");
    assert.equal($("#occult-edit-glyph-level").val(), "1");
    assert.equal($("#occult-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#occult-edit-glyph-stat-text").html(), "");
    assert.equal($("#occult-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#occult-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#occult-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#occult-edit-glyph-label-level").html(), "1");
    assert.equal($("#occult-edit-glyph-ilvl").html(), "0");
    assert.equal($("#occult-edit-signet-id").val(), "2");
    assert.equal($("#occult-edit-signet-rarity").val(), "epic");
    assert.equal($("#occult-edit-signet-level").val(), "13");
    assert.equal($("#occult-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/epic-42x42.png");
    assert.equal($("#occult-edit-signet-description").html(), 'Active dodges break movement hindering effects, but also have their cooldown increased by <span id="occult-edit-signet-bonus1" class="stat-value const">76.13</span><span class="stat-value const">%</span>.');
    assert.equal($("#occult-edit-signet-label-level").html(), "13");
    assert.equal($("#occult-edit-signet-ilvl").html(), "55");

    // Agents :
    assert.equal($("#agent1-id").val(), '15');
    assert.equal($("#agent1-level").val(), '50');
    assert.equal($("#agent1-text25").html(), '<span class="stat-value gear">+325</span> Heal Rating');
    assert.equal($("#agent1-text50").html(), '<span class="stat-value heal">27</span> Healing on Critical Heals');

    assert.equal($("#agent2-id").val(), '37');
    assert.equal($("#agent2-level").val(), '25');
    assert.equal($("#agent2-text25").html(), '<span class="stat-value gear">+490</span> Hit Points');
    assert.equal($("#agent2-text50").html(), '');

    assert.equal($("#agent3-id").val(), '10');
    assert.equal($("#agent3-level").val(), '50');
    assert.equal($("#agent3-text25").html(), '<span class="stat-value gear">+150</span> Critical Power');
    assert.equal($("#agent3-text50").html(), '<span class="stat-value dps">130</span> Damage on Critical Hits');

    // Anima allocation :
    assert.equal($("#anima-allocation-damage-range").val(), '38');
    assert.equal($("#anima-allocation-damage-val").text(), '38');
    assert.equal($("#anima-allocation-healing-range").val(), '5');
    assert.equal($("#anima-allocation-healing-val").text(), '5');
    assert.equal($("#anima-allocation-survivability-range").val(), '57');
    assert.equal($("#anima-allocation-survivability-val").text(), '57');

    // Passives :
    assert.equal($("#passive-attack-rating-base-slider").val(), '1400');
    assert.equal($("#passive-attack-rating-base").text(), '1400');
    assert.equal($("#passive-attack-rating-passive-skills-slider").val(), '388');
    assert.equal($("#passive-attack-rating-passive-skills").text(), '388');
    assert.equal($("#passive-attack-rating-capstones-slider").val(), '520');
    assert.equal($("#passive-attack-rating-capstones").text(), '520');
    assert.equal($("#passive-heal-rating-base-slider").val(), '880');
    assert.equal($("#passive-heal-rating-base").text(), '880');
    assert.equal($("#passive-heal-rating-passive-skills-slider").val(), '916');
    assert.equal($("#passive-heal-rating-passive-skills").text(), '916');
    assert.equal($("#passive-heal-rating-capstones-slider").val(), '270');
    assert.equal($("#passive-heal-rating-capstones").text(), '270');
    assert.equal($("#passive-hit-points-base-slider").val(), '960');
    assert.equal($("#passive-hit-points-base").text(), '960');
    assert.equal($("#passive-hit-points-passive-skills-slider").val(), '2997');
    assert.equal($("#passive-hit-points-passive-skills").text(), '2997');
    assert.equal($("#passive-hit-points-capstones-slider").val(), '1950');
    assert.equal($("#passive-hit-points-capstones").text(), '1950');
    assert.equal($("#passive-critical-rating-passive-skills-slider").val(), '488');
    assert.equal($("#passive-critical-rating-passive-skills").text(), '488');
    assert.equal($("#passive-critical-chance-expertise-slider-weapon1").val(), '7.2');
    assert.equal($("#passive-critical-chance-expertise-weapon1").text(), '7.2');
    assert.equal($("#passive-critical-chance-expertise-slider-weapon2").val(), '4.2');
    assert.equal($("#passive-critical-chance-expertise-weapon2").text(), '4.2');
    assert.equal($("#passive-critical-power-passive-skills-slider").val(), '477');
    assert.equal($("#passive-critical-power-passive-skills").text(), '477');
    assert.equal($("#passive-critical-power-percentage-expertise-slider-weapon1").val(), '28.8');
    assert.equal($("#passive-critical-power-percentage-expertise-weapon1").text(), '28.8');
    assert.equal($("#passive-critical-power-percentage-expertise-slider-weapon2").val(), '16.8');
    assert.equal($("#passive-critical-power-percentage-expertise-weapon2").text(), '16.8');
    assert.equal($("#passive-hit-rating-passive-skills-slider").val(), '634');
    assert.equal($("#passive-hit-rating-passive-skills").text(), '634');
    assert.equal($("#passive-protection-passive-skills-slider").val(), '2154');
    assert.equal($("#passive-protection-passive-skills").text(), '2154');
    assert.equal($("#passive-defense-rating-passive-skills-slider").val(), '494');
    assert.equal($("#passive-defense-rating-passive-skills").text(), '494');
    assert.equal($("#passive-evade-rating-passive-skills-slider").val(), '753');
    assert.equal($("#passive-evade-rating-passive-skills").text(), '753');
});

QUnit.test("should set default values with an empty hash", function(assert) {
    swlcalc.init();

    // Summary
    assert.equal($("#stat-ilvl").html(), "0");
    assert.equal($("#stat-power-rating").html(), "0");
    assert.equal($("#stat-weapon-power").html(), "0");
    assert.equal($("#stat-attack-rating").html(), "4322");
    assert.equal($("#stat-heal-rating").html(), "4310");
    assert.equal($("#stat-hit-points").html(), "8727");
    assert.equal($("#stat-combat-power").html(), "324.2");
    assert.equal($("#stat-healing-power").html(), "86.2");
    assert.equal($("#stat-critical-rating").html(), "+756");
    assert.equal($("#stat-critical-chance").html(), "13.3%");
    assert.equal($("#stat-critical-power").html(), "+1008");
    assert.equal($("#stat-critical-power-percentage").html(), "90.7%");
    assert.equal($("#stat-hit-rating").html(), "+756");
    assert.equal($("#stat-glance-reduction").html(), "14.9%");
    assert.equal($("#stat-defense-rating").html(), "+753");
    assert.equal($("#stat-glance-chance").html(), "7.4%");
    assert.equal($("#stat-evade-rating").html(), "+753");
    assert.equal($("#stat-evade-chance").html(), "5.2%");
    assert.equal($("#stat-protection").html(), "2259");
    assert.equal($("#stat-damage-mitigation").html(), "8.4%");
    assert.equal($("#stat-agent1-bonus25").html(), '');
    assert.equal($("#stat-agent1-bonus50").html(), '');
    assert.equal($("#stat-agent2-bonus25").html(), '');
    assert.equal($("#stat-agent2-bonus50").html(), '');
    assert.equal($("#stat-agent3-bonus25").html(), '');
    assert.equal($("#stat-agent3-bonus50").html(), '');

    // Slots :
    assert.ok($("#weapon-recap-active").is(":visible"));
    assert.ok($("#weapon-recap-equipment-empty").is(":visible"));
    assert.ok($("#weapon-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#weapon-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#weapon-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#weapon-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#weapon-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#weapon-recap-glyph-section").is(":hidden"));
    assert.ok($("#weapon-recap-glyph-empty").is(":visible"));
    assert.ok($("#weapon-recap-signet-section").is(":hidden"));
    assert.ok($("#weapon-recap-signet-empty").is(":visible"));
    assert.equal($("#weapon-edit-ilvl").html(), "0");
    assert.equal($("#weapon-edit-equipment-id").val(), "none");
    assert.equal($("#weapon-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#weapon-edit-equipment-rarity").val(), "standard");
    assert.equal($("#weapon-edit-equipment-quality").val(), "1");
    assert.equal($("#weapon-edit-equipment-level").val(), "1");
    assert.equal($("#weapon-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#weapon-edit-equipment-stat-prot-value").html(), undefined);
    assert.equal($("#weapon-edit-equipment-ilvl").html(), "0");
    assert.equal($("#weapon-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/weapon/None.png");
    assert.equal($("#weapon-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#weapon-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#weapon-edit-equipment-label-level").html(), "1");
    assert.equal($("#weapon-edit-equipment-description").html(), "");
    assert.equal($("#weapon-edit-glyph-id").val(), "none");
    assert.equal($("#weapon-edit-glyph-rarity").val(), "standard");
    assert.equal($("#weapon-edit-glyph-quality").val(), "1");
    assert.equal($("#weapon-edit-glyph-level").val(), "1");
    assert.equal($("#weapon-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#weapon-edit-glyph-stat-text").html(), "");
    assert.equal($("#weapon-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#weapon-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#weapon-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#weapon-edit-glyph-label-level").html(), "1");
    assert.equal($("#weapon-edit-glyph-ilvl").html(), "0");
    assert.equal($("#weapon-edit-signet-id").val(), "none");
    assert.equal($("#weapon-edit-signet-rarity").val(), undefined);
    assert.equal($("#weapon-edit-signet-level").val(), undefined);
    assert.equal($("#weapon-edit-signet-img-rarity").attr('src'), undefined);
    assert.equal($("#weapon-edit-signet-description").html(), "");
    assert.equal($("#weapon-edit-signet-label-level").html(), undefined);
    assert.equal($("#weapon-edit-signet-ilvl").html(), undefined);
    assert.equal($("#weapon-edit-signet-bonus1").val(), undefined);


    assert.ok($("#weapon2-recap-active").is(":hidden"));
    assert.ok($("#weapon2-recap-equipment-empty").is(":visible"));
    assert.ok($("#weapon2-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#weapon2-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#weapon2-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#weapon2-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#weapon2-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#weapon2-recap-glyph-section").is(":hidden"));
    assert.ok($("#weapon2-recap-glyph-empty").is(":visible"));
    assert.ok($("#weapon2-recap-signet-section").is(":hidden"));
    assert.ok($("#weapon2-recap-signet-empty").is(":visible"));
    assert.equal($("#weapon2-edit-ilvl").html(), "0");
    assert.equal($("#weapon2-edit-equipment-id").val(), "none");
    assert.equal($("#weapon2-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#weapon2-edit-equipment-rarity").val(), "standard");
    assert.equal($("#weapon2-edit-equipment-quality").val(), "1");
    assert.equal($("#weapon2-edit-equipment-level").val(), "1");
    assert.equal($("#weapon2-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#weapon2-edit-equipment-stat-prot-value").html(), undefined);
    assert.equal($("#weapon2-edit-equipment-ilvl").html(), "0");
    assert.equal($("#weapon2-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/weapon/None.png");
    assert.equal($("#weapon2-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#weapon2-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#weapon2-edit-equipment-label-level").html(), "1");
    assert.equal($("#weapon2-edit-equipment-description").html(), "");
    assert.equal($("#weapon2-edit-glyph-id").val(), "none");
    assert.equal($("#weapon2-edit-glyph-rarity").val(), "standard");
    assert.equal($("#weapon2-edit-glyph-quality").val(), "1");
    assert.equal($("#weapon2-edit-glyph-level").val(), "1");
    assert.equal($("#weapon2-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#weapon2-edit-glyph-stat-text").html(), "");
    assert.equal($("#weapon2-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#weapon2-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#weapon2-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#weapon2-edit-glyph-label-level").html(), "1");
    assert.equal($("#weapon2-edit-glyph-ilvl").html(), "0");
    assert.equal($("#weapon2-edit-signet-id").val(), "none");
    assert.equal($("#weapon2-edit-signet-rarity").val(), undefined);
    assert.equal($("#weapon2-edit-signet-level").val(), undefined);
    assert.equal($("#weapon2-edit-signet-img-rarity").attr('src'), undefined);
    assert.equal($("#weapon2-edit-signet-description").html(), "");
    assert.equal($("#weapon2-edit-signet-label-level").html(), undefined);
    assert.equal($("#weapon2-edit-signet-ilvl").html(), undefined);
    assert.equal($("#weapon2-edit-signet-bonus1").val(), undefined);


    assert.ok($("#head-recap-equipment-empty").is(":visible"));
    assert.ok($("#head-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#head-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#head-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#head-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#head-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#head-recap-glyph-section").is(":hidden"));
    assert.ok($("#head-recap-glyph-empty").is(":visible"));
    assert.ok($("#head-recap-signet-section").is(":hidden"));
    assert.ok($("#head-recap-signet-empty").is(":visible"));
    assert.equal($("#head-edit-ilvl").html(), "0");
    assert.equal($("#head-edit-equipment-id").val(), "none");
    assert.equal($("#head-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#head-edit-equipment-rarity").val(), "standard");
    assert.equal($("#head-edit-equipment-quality").val(), "1");
    assert.equal($("#head-edit-equipment-level").val(), "1");
    assert.equal($("#head-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#head-edit-equipment-stat-prot-value").html(), "0");
    assert.equal($("#head-edit-equipment-ilvl").html(), "0");
    assert.equal($("#head-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/head/None.png");
    assert.equal($("#head-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/head/standard-42x42.png");
    assert.equal($("#head-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#head-edit-equipment-label-level").html(), "1");
    assert.equal($("#head-edit-equipment-description").html(), "");
    assert.equal($("#head-edit-glyph-id").val(), "none");
    assert.equal($("#head-edit-glyph-rarity").val(), "standard");
    assert.equal($("#head-edit-glyph-quality").val(), "1");
    assert.equal($("#head-edit-glyph-level").val(), "1");
    assert.equal($("#head-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#head-edit-glyph-stat-text").html(), "");
    assert.equal($("#head-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#head-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#head-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#head-edit-glyph-label-level").html(), "1");
    assert.equal($("#head-edit-glyph-ilvl").html(), "0");
    assert.equal($("#head-edit-signet-id").val(), "none");
    assert.equal($("#head-edit-signet-rarity").val(), "standard");
    assert.equal($("#head-edit-signet-level").val(), "1");
    assert.equal($("#head-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#head-edit-signet-description").html(), "");
    assert.equal($("#head-edit-signet-label-level").html(), "1");
    assert.equal($("#head-edit-signet-ilvl").html(), "0");
    assert.equal($("#head-edit-signet-bonus1").val(), undefined);


    assert.ok($("#finger-recap-equipment-empty").is(":visible"));
    assert.ok($("#finger-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#finger-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#finger-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#finger-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#finger-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#finger-recap-glyph-section").is(":hidden"));
    assert.ok($("#finger-recap-glyph-empty").is(":visible"));
    assert.ok($("#finger-recap-signet-section").is(":hidden"));
    assert.ok($("#finger-recap-signet-empty").is(":visible"));
    assert.equal($("#finger-edit-ilvl").html(), "0");
    assert.equal($("#finger-edit-equipment-id").val(), "none");
    assert.equal($("#finger-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#finger-edit-equipment-rarity").val(), "standard");
    assert.equal($("#finger-edit-equipment-quality").val(), "1");
    assert.equal($("#finger-edit-equipment-level").val(), "1");
    assert.equal($("#finger-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#finger-edit-equipment-stat-prot-value").html(), "0");
    assert.equal($("#finger-edit-equipment-ilvl").html(), "0");
    assert.equal($("#finger-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/finger/None.png");
    assert.equal($("#finger-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/finger/standard-42x42.png");
    assert.equal($("#finger-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#finger-edit-equipment-label-level").html(), "1");
    assert.equal($("#finger-edit-equipment-description").html(), "");
    assert.equal($("#finger-edit-glyph-id").val(), "none");
    assert.equal($("#finger-edit-glyph-rarity").val(), "standard");
    assert.equal($("#finger-edit-glyph-quality").val(), "1");
    assert.equal($("#finger-edit-glyph-level").val(), "1");
    assert.equal($("#finger-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#finger-edit-glyph-stat-text").html(), "");
    assert.equal($("#finger-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#finger-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#finger-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#finger-edit-glyph-label-level").html(), "1");
    assert.equal($("#finger-edit-glyph-ilvl").html(), "0");
    assert.equal($("#finger-edit-signet-id").val(), "none");
    assert.equal($("#finger-edit-signet-rarity").val(), "standard");
    assert.equal($("#finger-edit-signet-level").val(), "1");
    assert.equal($("#finger-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#finger-edit-signet-description").html(), "");
    assert.equal($("#finger-edit-signet-label-level").html(), "1");
    assert.equal($("#finger-edit-signet-ilvl").html(), "0");
    assert.equal($("#finger-edit-signet-bonus1").val(), undefined);


    assert.ok($("#neck-recap-equipment-empty").is(":visible"));
    assert.ok($("#neck-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#neck-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#neck-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#neck-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#neck-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#neck-recap-glyph-section").is(":hidden"));
    assert.ok($("#neck-recap-glyph-empty").is(":visible"));
    assert.ok($("#neck-recap-signet-section").is(":hidden"));
    assert.ok($("#neck-recap-signet-empty").is(":visible"));
    assert.equal($("#neck-edit-ilvl").html(), "0");
    assert.equal($("#neck-edit-equipment-id").val(), "none");
    assert.equal($("#neck-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#neck-edit-equipment-rarity").val(), "standard");
    assert.equal($("#neck-edit-equipment-quality").val(), "1");
    assert.equal($("#neck-edit-equipment-level").val(), "1");
    assert.equal($("#neck-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#neck-edit-equipment-stat-prot-value").html(), "0");
    assert.equal($("#neck-edit-equipment-ilvl").html(), "0");
    assert.equal($("#neck-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/neck/None.png");
    assert.equal($("#neck-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/neck/standard-42x42.png");
    assert.equal($("#neck-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#neck-edit-equipment-label-level").html(), "1");
    assert.equal($("#neck-edit-equipment-description").html(), "");
    assert.equal($("#neck-edit-glyph-id").val(), "none");
    assert.equal($("#neck-edit-glyph-rarity").val(), "standard");
    assert.equal($("#neck-edit-glyph-quality").val(), "1");
    assert.equal($("#neck-edit-glyph-level").val(), "1");
    assert.equal($("#neck-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#neck-edit-glyph-stat-text").html(), "");
    assert.equal($("#neck-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#neck-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#neck-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#neck-edit-glyph-label-level").html(), "1");
    assert.equal($("#neck-edit-glyph-ilvl").html(), "0");
    assert.equal($("#neck-edit-signet-id").val(), "none");
    assert.equal($("#neck-edit-signet-rarity").val(), "standard");
    assert.equal($("#neck-edit-signet-level").val(), "1");
    assert.equal($("#neck-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#neck-edit-signet-description").html(), "");
    assert.equal($("#neck-edit-signet-label-level").html(), "1");
    assert.equal($("#neck-edit-signet-ilvl").html(), "0");
    assert.equal($("#neck-edit-signet-bonus1").val(), undefined);


    assert.ok($("#wrist-recap-equipment-empty").is(":visible"));
    assert.ok($("#wrist-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#wrist-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#wrist-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#wrist-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#wrist-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#wrist-recap-glyph-section").is(":hidden"));
    assert.ok($("#wrist-recap-glyph-empty").is(":visible"));
    assert.ok($("#wrist-recap-signet-section").is(":hidden"));
    assert.ok($("#wrist-recap-signet-empty").is(":visible"));
    assert.equal($("#wrist-edit-ilvl").html(), "0");
    assert.equal($("#wrist-edit-equipment-id").val(), "none");
    assert.equal($("#wrist-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#wrist-edit-equipment-rarity").val(), "standard");
    assert.equal($("#wrist-edit-equipment-quality").val(), "1");
    assert.equal($("#wrist-edit-equipment-level").val(), "1");
    assert.equal($("#wrist-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#wrist-edit-equipment-stat-prot-value").html(), "0");
    assert.equal($("#wrist-edit-equipment-ilvl").html(), "0");
    assert.equal($("#wrist-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/wrist/None.png");
    assert.equal($("#wrist-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/wrist/standard-42x42.png");
    assert.equal($("#wrist-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#wrist-edit-equipment-label-level").html(), "1");
    assert.equal($("#wrist-edit-equipment-description").html(), "");
    assert.equal($("#wrist-edit-glyph-id").val(), "none");
    assert.equal($("#wrist-edit-glyph-rarity").val(), "standard");
    assert.equal($("#wrist-edit-glyph-quality").val(), "1");
    assert.equal($("#wrist-edit-glyph-level").val(), "1");
    assert.equal($("#wrist-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#wrist-edit-glyph-stat-text").html(), "");
    assert.equal($("#wrist-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#wrist-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#wrist-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#wrist-edit-glyph-label-level").html(), "1");
    assert.equal($("#wrist-edit-glyph-ilvl").html(), "0");
    assert.equal($("#wrist-edit-signet-id").val(), "none");
    assert.equal($("#wrist-edit-signet-rarity").val(), "standard");
    assert.equal($("#wrist-edit-signet-level").val(), "1");
    assert.equal($("#wrist-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#wrist-edit-signet-description").html(), "");
    assert.equal($("#wrist-edit-signet-label-level").html(), "1");
    assert.equal($("#wrist-edit-signet-ilvl").html(), "0");
    assert.equal($("#wrist-edit-signet-bonus1").val(), undefined);


    assert.ok($("#luck-recap-equipment-empty").is(":visible"));
    assert.ok($("#luck-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#luck-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#luck-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#luck-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#luck-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#luck-recap-glyph-section").is(":hidden"));
    assert.ok($("#luck-recap-glyph-empty").is(":visible"));
    assert.ok($("#luck-recap-signet-section").is(":hidden"));
    assert.ok($("#luck-recap-signet-empty").is(":visible"));
    assert.equal($("#luck-edit-ilvl").html(), "0");
    assert.equal($("#luck-edit-equipment-id").val(), "none");
    assert.equal($("#luck-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#luck-edit-equipment-rarity").val(), "standard");
    assert.equal($("#luck-edit-equipment-quality").val(), "1");
    assert.equal($("#luck-edit-equipment-level").val(), "1");
    assert.equal($("#luck-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#luck-edit-equipment-stat-prot-value").html(), "0");
    assert.equal($("#luck-edit-equipment-ilvl").html(), "0");
    assert.equal($("#luck-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/luck/None.png");
    assert.equal($("#luck-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/luck/standard-42x42.png");
    assert.equal($("#luck-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#luck-edit-equipment-label-level").html(), "1");
    assert.equal($("#luck-edit-equipment-description").html(), "");
    assert.equal($("#luck-edit-glyph-id").val(), "none");
    assert.equal($("#luck-edit-glyph-rarity").val(), "standard");
    assert.equal($("#luck-edit-glyph-quality").val(), "1");
    assert.equal($("#luck-edit-glyph-level").val(), "1");
    assert.equal($("#luck-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#luck-edit-glyph-stat-text").html(), "");
    assert.equal($("#luck-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#luck-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#luck-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#luck-edit-glyph-label-level").html(), "1");
    assert.equal($("#luck-edit-glyph-ilvl").html(), "0");
    assert.equal($("#luck-edit-signet-id").val(), "none");
    assert.equal($("#luck-edit-signet-rarity").val(), "standard");
    assert.equal($("#luck-edit-signet-level").val(), "1");
    assert.equal($("#luck-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#luck-edit-signet-description").html(), "");
    assert.equal($("#luck-edit-signet-label-level").html(), "1");
    assert.equal($("#luck-edit-signet-ilvl").html(), "0");
    assert.equal($("#luck-edit-signet-bonus1").val(), undefined);


    assert.ok($("#waist-recap-equipment-empty").is(":visible"));
    assert.ok($("#waist-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#waist-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#waist-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#waist-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#waist-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#waist-recap-glyph-section").is(":hidden"));
    assert.ok($("#waist-recap-glyph-empty").is(":visible"));
    assert.ok($("#waist-recap-signet-section").is(":hidden"));
    assert.ok($("#waist-recap-signet-empty").is(":visible"));
    assert.equal($("#waist-edit-ilvl").html(), "0");
    assert.equal($("#waist-edit-equipment-id").val(), "none");
    assert.equal($("#waist-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#waist-edit-equipment-rarity").val(), "standard");
    assert.equal($("#waist-edit-equipment-quality").val(), "1");
    assert.equal($("#waist-edit-equipment-level").val(), "1");
    assert.equal($("#waist-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#waist-edit-equipment-stat-prot-value").html(), "0");
    assert.equal($("#waist-edit-equipment-ilvl").html(), "0");
    assert.equal($("#waist-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/waist/None.png");
    assert.equal($("#waist-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/waist/standard-42x42.png");
    assert.equal($("#waist-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#waist-edit-equipment-label-level").html(), "1");
    assert.equal($("#waist-edit-equipment-description").html(), "");
    assert.equal($("#waist-edit-glyph-id").val(), "none");
    assert.equal($("#waist-edit-glyph-rarity").val(), "standard");
    assert.equal($("#waist-edit-glyph-quality").val(), "1");
    assert.equal($("#waist-edit-glyph-level").val(), "1");
    assert.equal($("#waist-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#waist-edit-glyph-stat-text").html(), "");
    assert.equal($("#waist-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#waist-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#waist-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#waist-edit-glyph-label-level").html(), "1");
    assert.equal($("#waist-edit-glyph-ilvl").html(), "0");
    assert.equal($("#waist-edit-signet-id").val(), "none");
    assert.equal($("#waist-edit-signet-rarity").val(), "standard");
    assert.equal($("#waist-edit-signet-level").val(), "1");
    assert.equal($("#waist-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#waist-edit-signet-description").html(), "");
    assert.equal($("#waist-edit-signet-label-level").html(), "1");
    assert.equal($("#waist-edit-signet-ilvl").html(), "0");
    assert.equal($("#waist-edit-signet-bonus1").val(), undefined);


    assert.ok($("#occult-recap-equipment-empty").is(":visible"));
    assert.ok($("#occult-recap-equipment-title-section").is(":hidden"));
    assert.ok($("#occult-recap-equipment-subtitle-section").is(":hidden"));
    assert.ok($("#occult-recap-equipment-stat-section").is(":hidden"));
    assert.ok($("#occult-recap-equipment-img-section").is(":hidden"));
    assert.ok($("#occult-recap-equipment-description-section").is(":hidden"));
    assert.ok($("#occult-recap-glyph-section").is(":hidden"));
    assert.ok($("#occult-recap-glyph-empty").is(":visible"));
    assert.ok($("#occult-recap-signet-section").is(":hidden"));
    assert.ok($("#occult-recap-signet-empty").is(":visible"));
    assert.equal($("#occult-edit-ilvl").html(), "0");
    assert.equal($("#occult-edit-equipment-id").val(), "none");
    assert.equal($("#occult-edit-equipment-id option:selected").text(), "None");
    assert.equal($("#occult-edit-equipment-rarity").val(), "standard");
    assert.equal($("#occult-edit-equipment-quality").val(), "1");
    assert.equal($("#occult-edit-equipment-level").val(), "1");
    assert.equal($("#occult-edit-equipment-stat-power-value").html(), "0");
    assert.equal($("#occult-edit-equipment-stat-prot-value").html(), "0");
    assert.equal($("#occult-edit-equipment-ilvl").html(), "0");
    assert.equal($("#occult-edit-equipment-img-item").attr('src'), "assets/images/icons/equipment/occult/None.png");
    assert.equal($("#occult-edit-equipment-img-rarity").attr('src'), "assets/images/icons/rarity/occult/standard-42x42.png");
    assert.equal($("#occult-edit-equipment-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#occult-edit-equipment-label-level").html(), "1");
    assert.equal($("#occult-edit-equipment-description").html(), "");
    assert.equal($("#occult-edit-glyph-id").val(), "none");
    assert.equal($("#occult-edit-glyph-rarity").val(), "standard");
    assert.equal($("#occult-edit-glyph-quality").val(), "1");
    assert.equal($("#occult-edit-glyph-level").val(), "1");
    assert.equal($("#occult-edit-glyph-stat-rating").html(), "0");
    assert.equal($("#occult-edit-glyph-stat-text").html(), "");
    assert.equal($("#occult-edit-glyph-img-item").attr('src'), "assets/images/icons/glyph/none.png");
    assert.equal($("#occult-edit-glyph-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#occult-edit-glyph-img-quality").attr('src'), "assets/images/icons/quality/1.png");
    assert.equal($("#occult-edit-glyph-label-level").html(), "1");
    assert.equal($("#occult-edit-glyph-ilvl").html(), "0");
    assert.equal($("#occult-edit-signet-id").val(), "none");
    assert.equal($("#occult-edit-signet-rarity").val(), "standard");
    assert.equal($("#occult-edit-signet-level").val(), "1");
    assert.equal($("#occult-edit-signet-img-rarity").attr('src'), "assets/images/icons/rarity/standard-42x42.png");
    assert.equal($("#occult-edit-signet-description").html(), "");
    assert.equal($("#occult-edit-signet-label-level").html(), "1");
    assert.equal($("#occult-edit-signet-ilvl").html(), "0");
    assert.equal($("#occult-edit-signet-bonus1").val(), undefined);

    // Agents :
    assert.equal($("#agent1-id").val(), '0');
    assert.equal($("#agent1-level").val(), '25');
    assert.equal($("#agent1-text25").html(), 'Empty agent slot');
    assert.equal($("#agent1-text50").html(), '');

    assert.equal($("#agent2-id").val(), '0');
    assert.equal($("#agent2-level").val(), '25');
    assert.equal($("#agent2-text25").html(), 'Empty agent slot');
    assert.equal($("#agent2-text50").html(), '');

    assert.equal($("#agent3-id").val(), '0');
    assert.equal($("#agent3-level").val(), '25');
    assert.equal($("#agent3-text25").html(), 'Empty agent slot');
    assert.equal($("#agent3-text50").html(), '');

    // Anima allocation :
    assert.equal($("#anima-allocation-damage-range").val(), '100');
    assert.equal($("#anima-allocation-damage-val").text(), '100');
    assert.equal($("#anima-allocation-healing-range").val(), '0');
    assert.equal($("#anima-allocation-healing-val").text(), '0');
    assert.equal($("#anima-allocation-survivability-range").val(), '0');
    assert.equal($("#anima-allocation-survivability-val").text(), '0');

    // Passives :
    assert.equal($("#passive-attack-rating-base-slider").val(), '2000');
    assert.equal($("#passive-attack-rating-base").text(), '2000');
    assert.equal($("#passive-attack-rating-passive-skills-slider").val(), '1512');
    assert.equal($("#passive-attack-rating-passive-skills").text(), '1512');
    assert.equal($("#passive-attack-rating-capstones-slider").val(), '810');
    assert.equal($("#passive-attack-rating-capstones").text(), '810');
    assert.equal($("#passive-heal-rating-base-slider").val(), '2000');
    assert.equal($("#passive-heal-rating-base").text(), '2000');
    assert.equal($("#passive-heal-rating-passive-skills-slider").val(), '1500');
    assert.equal($("#passive-heal-rating-passive-skills").text(), '1500');
    assert.equal($("#passive-heal-rating-capstones-slider").val(), '810');
    assert.equal($("#passive-heal-rating-capstones").text(), '810');
    assert.equal($("#passive-hit-points-base-slider").val(), '3300');
    assert.equal($("#passive-hit-points-base").text(), '3300');
    assert.equal($("#passive-hit-points-passive-skills-slider").val(), '2997');
    assert.equal($("#passive-hit-points-passive-skills").text(), '2997');
    assert.equal($("#passive-hit-points-capstones-slider").val(), '2430');
    assert.equal($("#passive-hit-points-capstones").text(), '2430');
    assert.equal($("#passive-critical-rating-passive-skills-slider").val(), '756');
    assert.equal($("#passive-critical-rating-passive-skills").text(), '756');
    assert.equal($("#passive-critical-chance-expertise-slider-weapon1").val(), '7.5');
    assert.equal($("#passive-critical-chance-expertise-weapon1").text(), '7.5');
    assert.equal($("#passive-critical-chance-expertise-slider-weapon2").val(), '7.5');
    assert.equal($("#passive-critical-chance-expertise-weapon2").text(), '7.5');
    assert.equal($("#passive-critical-power-passive-skills-slider").val(), '1008');
    assert.equal($("#passive-critical-power-passive-skills").text(), '1008');
    assert.equal($("#passive-critical-power-percentage-expertise-slider-weapon1").val(), '30');
    assert.equal($("#passive-critical-power-percentage-expertise-weapon1").text(), '30');
    assert.equal($("#passive-critical-power-percentage-expertise-slider-weapon2").val(), '30');
    assert.equal($("#passive-critical-power-percentage-expertise-weapon2").text(), '30');
    assert.equal($("#passive-hit-rating-passive-skills-slider").val(), '756');
    assert.equal($("#passive-hit-rating-passive-skills").text(), '756');
    assert.equal($("#passive-protection-passive-skills-slider").val(), '2259');
    assert.equal($("#passive-protection-passive-skills").text(), '2259');
    assert.equal($("#passive-defense-rating-passive-skills-slider").val(), '753');
    assert.equal($("#passive-defense-rating-passive-skills").text(), '753');
    assert.equal($("#passive-evade-rating-passive-skills-slider").val(), '753');
    assert.equal($("#passive-evade-rating-passive-skills").text(), '753');
});
